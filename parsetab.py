
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'EQUALS MINUS MULTIPLY NEWLINE NUMBER PLUS VARIABLEsystem : equation\n              | system NEWLINE equation equation : expression EQUALS NUMBERexpression : term\n                  | expression termterm : VARIABLE\n            | PLUS VARIABLE\n            | MINUS VARIABLE\n            | factor VARIABLE\n            | factor MULTIPLY VARIABLEfactor : NUMBER\n              | PLUS NUMBER\n              | MINUS NUMBER'
    
_lr_action_items = {'VARIABLE':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,21,],[6,6,-11,-4,-6,13,15,17,6,-5,-7,-12,-8,-13,-9,21,-10,]),'PLUS':([0,3,5,6,10,12,13,15,17,21,],[7,7,-4,-6,7,-5,-7,-8,-9,-10,]),'MINUS':([0,3,5,6,10,12,13,15,17,21,],[8,8,-4,-6,8,-5,-7,-8,-9,-10,]),'NUMBER':([0,3,5,6,7,8,10,11,12,13,15,17,21,],[4,4,-4,-6,14,16,4,20,-5,-7,-8,-9,-10,]),'$end':([1,2,19,20,],[0,-1,-2,-3,]),'NEWLINE':([1,2,19,20,],[10,-1,-2,-3,]),'EQUALS':([3,5,6,12,13,15,17,21,],[11,-4,-6,-5,-7,-8,-9,-10,]),'MULTIPLY':([4,9,14,16,],[-11,18,-12,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'system':([0,],[1,]),'equation':([0,10,],[2,19,]),'expression':([0,10,],[3,3,]),'term':([0,3,10,],[5,12,5,]),'factor':([0,3,10,],[9,9,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> system","S'",1,None,None,None),
  ('system -> equation','system',1,'p_system','yacc.py',7),
  ('system -> system NEWLINE equation','system',3,'p_system','yacc.py',8),
  ('equation -> expression EQUALS NUMBER','equation',3,'p_equation','yacc.py',16),
  ('expression -> term','expression',1,'p_expression','yacc.py',20),
  ('expression -> expression term','expression',2,'p_expression','yacc.py',21),
  ('term -> VARIABLE','term',1,'p_term','yacc.py',28),
  ('term -> PLUS VARIABLE','term',2,'p_term','yacc.py',29),
  ('term -> MINUS VARIABLE','term',2,'p_term','yacc.py',30),
  ('term -> factor VARIABLE','term',2,'p_term','yacc.py',31),
  ('term -> factor MULTIPLY VARIABLE','term',3,'p_term','yacc.py',32),
  ('factor -> NUMBER','factor',1,'p_factor','yacc.py',55),
  ('factor -> PLUS NUMBER','factor',2,'p_factor','yacc.py',56),
  ('factor -> MINUS NUMBER','factor',2,'p_factor','yacc.py',57),
]
